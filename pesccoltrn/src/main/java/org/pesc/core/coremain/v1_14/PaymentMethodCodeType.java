//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.02.25 at 04:54:23 PM PST 
//


package org.pesc.core.coremain.v1_14;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for PaymentMethodCodeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="PaymentMethodCodeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="BankWire"/>
 *     &lt;enumeration value="Cash"/>
 *     &lt;enumeration value="Check"/>
 *     &lt;enumeration value="CreditCard"/>
 *     &lt;enumeration value="DebitCard"/>
 *     &lt;enumeration value="FeeWaiver"/>
 *     &lt;enumeration value="GuaranteedFunds"/>
 *     &lt;enumeration value="MoneyOrder"/>
 *     &lt;enumeration value="OtherAgency"/>
 *     &lt;enumeration value="Other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "PaymentMethodCodeType")
@XmlEnum
public enum PaymentMethodCodeType {

    @XmlEnumValue("BankWire")
    BANK_WIRE("BankWire"),
    @XmlEnumValue("Cash")
    CASH("Cash"),
    @XmlEnumValue("Check")
    CHECK("Check"),
    @XmlEnumValue("CreditCard")
    CREDIT_CARD("CreditCard"),
    @XmlEnumValue("DebitCard")
    DEBIT_CARD("DebitCard"),
    @XmlEnumValue("FeeWaiver")
    FEE_WAIVER("FeeWaiver"),
    @XmlEnumValue("GuaranteedFunds")
    GUARANTEED_FUNDS("GuaranteedFunds"),
    @XmlEnumValue("MoneyOrder")
    MONEY_ORDER("MoneyOrder"),
    @XmlEnumValue("OtherAgency")
    OTHER_AGENCY("OtherAgency"),
    @XmlEnumValue("Other")
    OTHER("Other");
    private final String value;

    PaymentMethodCodeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PaymentMethodCodeType fromValue(String v) {
        for (PaymentMethodCodeType c: PaymentMethodCodeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
