//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.02.25 at 04:54:23 PM PST 
//


package org.pesc.core.coremain.v1_14;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DocumentTypeCodeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DocumentTypeCodeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Acknowledgment"/>
 *     &lt;enumeration value="Application"/>
 *     &lt;enumeration value="Cancel"/>
 *     &lt;enumeration value="CertificationRequest"/>
 *     &lt;enumeration value="Change"/>
 *     &lt;enumeration value="DisbursementAcknowledgement"/>
 *     &lt;enumeration value="DisbursementForecast"/>
 *     &lt;enumeration value="DisbursementRoster"/>
 *     &lt;enumeration value="InstitutionRequest"/>
 *     &lt;enumeration value="GainfulEmploymentStudentResponseFile"/>
 *     &lt;enumeration value="GainfulEmploymentStudentSubmittal"/>
 *     &lt;enumeration value="IPEDS"/>
 *     &lt;enumeration value="NSLDSEnrollmentError"/>
 *     &lt;enumeration value="NSLDSEnrollmentSubmittal"/>
 *     &lt;enumeration value="Receipt"/>
 *     &lt;enumeration value="Request"/>
 *     &lt;enumeration value="RequestedRecord"/>
 *     &lt;enumeration value="Response"/>
 *     &lt;enumeration value="ReverseTransfer"/>
 *     &lt;enumeration value="StudentRequest"/>
 *     &lt;enumeration value="TermEnroll"/>
 *     &lt;enumeration value="TermGrade"/>
 *     &lt;enumeration value="ThirdPartyRequest"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DocumentTypeCodeType")
@XmlEnum
public enum DocumentTypeCodeType {

    @XmlEnumValue("Acknowledgment")
    ACKNOWLEDGMENT("Acknowledgment"),
    @XmlEnumValue("Application")
    APPLICATION("Application"),
    @XmlEnumValue("Cancel")
    CANCEL("Cancel"),
    @XmlEnumValue("CertificationRequest")
    CERTIFICATION_REQUEST("CertificationRequest"),
    @XmlEnumValue("Change")
    CHANGE("Change"),
    @XmlEnumValue("DisbursementAcknowledgement")
    DISBURSEMENT_ACKNOWLEDGEMENT("DisbursementAcknowledgement"),
    @XmlEnumValue("DisbursementForecast")
    DISBURSEMENT_FORECAST("DisbursementForecast"),
    @XmlEnumValue("DisbursementRoster")
    DISBURSEMENT_ROSTER("DisbursementRoster"),
    @XmlEnumValue("InstitutionRequest")
    INSTITUTION_REQUEST("InstitutionRequest"),
    @XmlEnumValue("GainfulEmploymentStudentResponseFile")
    GAINFUL_EMPLOYMENT_STUDENT_RESPONSE_FILE("GainfulEmploymentStudentResponseFile"),
    @XmlEnumValue("GainfulEmploymentStudentSubmittal")
    GAINFUL_EMPLOYMENT_STUDENT_SUBMITTAL("GainfulEmploymentStudentSubmittal"),
    IPEDS("IPEDS"),
    @XmlEnumValue("NSLDSEnrollmentError")
    NSLDS_ENROLLMENT_ERROR("NSLDSEnrollmentError"),
    @XmlEnumValue("NSLDSEnrollmentSubmittal")
    NSLDS_ENROLLMENT_SUBMITTAL("NSLDSEnrollmentSubmittal"),
    @XmlEnumValue("Receipt")
    RECEIPT("Receipt"),
    @XmlEnumValue("Request")
    REQUEST("Request"),
    @XmlEnumValue("RequestedRecord")
    REQUESTED_RECORD("RequestedRecord"),
    @XmlEnumValue("Response")
    RESPONSE("Response"),
    @XmlEnumValue("ReverseTransfer")
    REVERSE_TRANSFER("ReverseTransfer"),
    @XmlEnumValue("StudentRequest")
    STUDENT_REQUEST("StudentRequest"),
    @XmlEnumValue("TermEnroll")
    TERM_ENROLL("TermEnroll"),
    @XmlEnumValue("TermGrade")
    TERM_GRADE("TermGrade"),
    @XmlEnumValue("ThirdPartyRequest")
    THIRD_PARTY_REQUEST("ThirdPartyRequest");
    private final String value;

    DocumentTypeCodeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DocumentTypeCodeType fromValue(String v) {
        for (DocumentTypeCodeType c: DocumentTypeCodeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
