//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.02.25 at 04:54:23 PM PST 
//


package org.pesc.core.coremain.v1_14;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for MaritalStatusChangeCodeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="MaritalStatusChangeCodeType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="None"/>
 *     &lt;enumeration value="Married"/>
 *     &lt;enumeration value="DomesticPartnership"/>
 *     &lt;enumeration value="Cohabitation"/>
 *     &lt;enumeration value="LegallySeparated"/>
 *     &lt;enumeration value="Divorced"/>
 *     &lt;enumeration value="Widowed"/>
 *     &lt;enumeration value="Unknown"/>
 *     &lt;enumeration value="Other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "MaritalStatusChangeCodeType")
@XmlEnum
public enum MaritalStatusChangeCodeType {

    @XmlEnumValue("None")
    NONE("None"),
    @XmlEnumValue("Married")
    MARRIED("Married"),
    @XmlEnumValue("DomesticPartnership")
    DOMESTIC_PARTNERSHIP("DomesticPartnership"),
    @XmlEnumValue("Cohabitation")
    COHABITATION("Cohabitation"),
    @XmlEnumValue("LegallySeparated")
    LEGALLY_SEPARATED("LegallySeparated"),
    @XmlEnumValue("Divorced")
    DIVORCED("Divorced"),
    @XmlEnumValue("Widowed")
    WIDOWED("Widowed"),
    @XmlEnumValue("Unknown")
    UNKNOWN("Unknown"),
    @XmlEnumValue("Other")
    OTHER("Other");
    private final String value;

    MaritalStatusChangeCodeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static MaritalStatusChangeCodeType fromValue(String v) {
        for (MaritalStatusChangeCodeType c: MaritalStatusChangeCodeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
